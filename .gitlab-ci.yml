variables:
  GIT_SUBMODULE_STRATEGY: recursive
  UNITY_EXE_DIR: 'C:/Unity/2019.4.13f1/Editor'
  UNITY_EXE: 'C:/Unity/2019.4.13f1/Editor/Unity.exe'
  SC_CFW_PATH: $CI_PROJECT_DIR/ScreenControl_Web
  SC_CFU_PATH: $CI_PROJECT_DIR/ScreenControl_Unity/Assets/ScreenControl/Client
  SC_CFU_VERSION: '1.0.0-alpha2'
  SC_CFW_VERSION: '1.0.0-alpha2'
  SC_SRV_VERSION: '1.0.0-alpha2'
  SC_API_VERSION: '1.0.1'

stages:
  - build
  - test

SC_Client::Unity::build:
  stage: build
  when: always
  script:
    # Update Version.txt with latest information before packaging
    - python ./Scripts/UpdateVersionFile.py --path ${env:SC_CFU_PATH}/Version.txt --swVer ${env:SC_CFU_VERSION} --apiVer ${env:SC_API_VERSION} --ref ${env:CI_COMMIT_SHA}
    # Copy Version.txt to Client_Release folder
    - mkdir ./Client_Release
    - cp ${env:CI_PROJECT_DIR}/ScreenControl_Unity/Assets/ScreenControl/Client/Version.txt ./Client_Release
    # Package Client
    - cd ./Scripts
    - "& ./package_unity_client.bat"
  artifacts:
    name: "Screen_Control_Client_for_Unity_${env:SC_CFU_VERSION}_${env:CI_COMMIT_SHA}"
    paths:
      - ./Client_Release/*
      - ./Client_for_Unity_package.log
    expire_in: 2 weeks
    when: always
  tags:
    - unity
    - win10

SC_Client::Web::build:
  stage: build
  when: always
  script:
    # Update Version.txt with latest information before packaging
    - python ./Scripts/UpdateVersionFile.py --path ${env:SC_CFW_PATH}/Version.txt --swVer ${env:SC_CFW_VERSION} --apiVer ${env:SC_API_VERSION} --ref ${env:CI_COMMIT_SHA}
    # Build Client
    - cd ${env:SC_CFW_PATH}
    - npm i
    - ./node_modules/.bin/gulp build
    # Package Client
    - cd ${env:CI_PROJECT_DIR}
    - mkdir ./Client_Release
    - mkdir ./Client_Release/dist
    - mkdir ./Client_Release/ts
    - mkdir ./Client_Release/ts/src
    - cp ${env:SC_CFW_PATH}/Version.txt ./Client_Release
    - cp ${env:SC_CFW_PATH}/gulpfile.js ./Client_Release/ts/
    - cp ${env:SC_CFW_PATH}/package.json ./Client_Release/ts/
    - cp ${env:SC_CFW_PATH}/tsconfig.json ./Client_Release/ts/
    - cp -r ${env:SC_CFW_PATH}/build/dist ./Client_Release/dist
    - cp -r ${env:SC_CFW_PATH}/src ./Client_Release/ts/src
  artifacts:
    name: "Screen_Control_Client_for_Web_${env:SC_CFU_VERSION}_${env:CI_COMMIT_SHA}"
    paths:
      - ./Client_Release/*
    expire_in: 2 weeks
    when: always
  tags:
    - unity
    - win10

# build stage jobs
SC_Service::build:
  stage: build
  when: always
  script:
    # Update ProjectSettings file with correct version
    - python ./Scripts/UpdateUnityProjVer.py --path ./ScreenControl_Unity/ProjectSettings/ProjectSettings.asset --ver ${env:SC_SRV_VERSION}
    - cd ./Scripts
    - "& ./build_service.bat"
  artifacts:
    name: "Screen_Control_Service_${env:SC_SRV_VERSION}_${env:CI_COMMIT_SHA}"
    paths:
    - Build/**
    - ./Unity.log
    expire_in: 2 weeks
    when: always
  tags:
    - unity
    - win10

SC_Service::test:
  stage: test

  dependencies:
    - SC_Service::build
  needs: ["SC_Service::build"]

  script:
    - cd ./Testing/ServiceSocketTests/
    - npm install
    - ./node_modules/.bin/gulp build_machine_run

  artifacts:
    name: test_results
    paths:
      - ./Testing/ServiceSocketTests/results/**
      - ./Testing/ServiceSocketTests/PUT_TEST_BUILD_IN_HERE/**
    reports:
      junit: ./Testing/ServiceSocketTests/results/test_results.xml
    when: always
  tags:
    - unity
    - win10
